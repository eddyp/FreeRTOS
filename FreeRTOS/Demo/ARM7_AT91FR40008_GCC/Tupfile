#/*
#    FreeRTOS V9.0.0
#    Copyright (C) 2016 Real Time Engineers Ltd.
#    Copyright (C) 2017 Eddy PetriÈ™or
#	
#    This file is part of the FreeRTOS distribution.
#
#    FreeRTOS is free software; you can redistribute it and/or modify it under
#    the terms of the GNU General Public License (version 2) as published by the
#    Free Software Foundation AND MODIFIED BY the FreeRTOS exception.
#    >>>NOTE<<< The modification to the GPL is included to allow you to
#    distribute a combined work that includes FreeRTOS without being obliged to
#    provide the source code for proprietary components outside of the FreeRTOS
#    kernel.  FreeRTOS is distributed in the hope that it will be useful, but
#    WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
#    or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
#    more details. You should have received a copy of the GNU General Public
#    License and the FreeRTOS license exception along with FreeRTOS; if not it
#    can be viewed here: http://www.freertos.org/a00114.html and also obtained
#    by writing to Richard Barry, contact details for whom are available on the
#    FreeRTOS WEB site.
#
#*/

TOOCHAIN_PREFIX=arm-none-eabi-

CC=$(TOOCHAIN_PREFIX)gcc
OBJCOPY=$(TOOCHAIN_PREFIX)objcopy
ARCH=$(TOOCHAIN_PREFIX)ar
CRT0=boot.s

RUN_MODE := RUN_FROM_RAM
LDSCRIPT := atmel-ram.ld
OPTIM := -O0
DEBUG := -g
USE_THUMB_MODE := NO

#
# CFLAGS common to both the THUMB and ARM mode builds
#
CFLAGS=-Wall -Wextra -D$(RUN_MODE) -DGCC_AT91FR40008 -I. -I../../Source/include \
		-I../Common/include $(DEBUG) -mcpu=arm7tdmi -T$(LDSCRIPT) \
		-Wcast-align $(OPTIM) -fomit-frame-pointer -fno-strict-aliasing \
		-fno-dwarf2-cfi-asm

CFLAGS += -I../../Source/portable/GCC/ARM7_AT91FR40008

ifeq ($(USE_THUMB_MODE),YES)
	CFLAGS += -mthumb-interwork -D THUMB_INTERWORK
	THUMB_FLAGS=-mthumb
endif


LINKER_FLAGS=-Xlinker -ortosdemo.elf -Xlinker -M -Xlinker -Map=rtosdemo.map

#
# Source files that can be built to THUMB mode.
#
THUMB_SRC = \
main.c \
serial/serial.c \
ParTest/ParTest.c \
../Common/Minimal/integer.c \
../Common/Minimal/flash.c \
../Common/Minimal/PollQ.c \
../Common/Minimal/comtest.c \
../Common/Minimal/flop.c \
../Common/Minimal/semtest.c \
../Common/Minimal/dynamic.c \
../Common/Minimal/BlockQ.c \
../../Source/tasks.c \
../../Source/queue.c \
../../Source/list.c \
../../Source/portable/MemMang/heap_2.c \
../../Source/portable/GCC/ARM7_AT91FR40008/port.c

#DEMO_THUMB_SRC = \
#main.c \
#serial/serial.c \
#ParTest/ParTest.c
#
##../Common/Minimal
#DEMO_THUMB_COMMON_MIN_SRC = \
#integer.c \
#flash.c \
#PollQ.c \
#comtest.c \
#flop.c \
#semtest.c \
#dynamic.c \
#BlockQ.c
#
##../../Source
#DEMO_THUMB_SOURCE_SRC = \
#tasks.c \
#queue.c \
#list.c \
#portable/MemMang/heap_2.c \
#portable/GCC/ARM7_AT91FR40008/port.c

#
# Source files that must be built to ARM mode.
#
ARM_SRC = \
../../Source/portable/GCC/ARM7_AT91FR40008/portISR.c \
serial/serialISR.c

#:foreach $(ARM_SRC) |> ^CC %f^ $(CC) -c $(CFLAGS) %f -o %o |> %B.o {objs}
#!armcc = |> ^c CC %f^ $(CC) -c $(CFLAGS) %f -o %o |> %B.o
!armcc = | *.h |> ^c CC (arm) %f^ $(CC) -c $(CFLAGS) %f -o ./%o |> %B.o
:foreach $(ARM_SRC) |> !armcc |> {objs}

#:foreach $(THUMB_SRC) |> ^c CC %f^ $(CC) -c $(THUMB_FLAGS) $(CFLAGS) %f -o %o |> %B.o {objs}
#!thumbcc = |> ^c CC %f^ $(CC) -c $(THUMB_FLAGS) $(CFLAGS) %f -o %o |> %B.o
!thumbcc = | *.h |> ^c CC (thumb) %f^ $(CC) -c $(THUMB_FLAGS) $(CFLAGS) %f -o ./%o |> %B.o
:foreach $(THUMB_SRC) |> !thumbcc |> {objs}

#:{objs} |> ^c LINK %f^ $(CC) $(CFLAGS) -nostartfiles $(CRT0) $(LINKER_FLAGS) |> rtosdemo.elf
!link = |> ^c LINK %o^ $(CC) %f $(CFLAGS) -nostartfiles $(CRT0) $(LINKER_FLAGS) |>
:{objs} |> !link |> rtosdemo.elf | rtosdemo.map

:rtosdemo.elf |> ^c HEX %B^ $(OBJCOPY) %f -O ihex %o |> rtosdemo.hex

